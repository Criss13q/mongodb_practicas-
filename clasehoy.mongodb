
//RECORDAR QUE TODOS LOS OPERADORES INICIAN CON 
//EL SIGNO $

//use("UrbanStyle_store")

// $eq
//hace alucion a la igualdad

//listar todos los productos caballeros

/*db.products.find(
    {
        tipo: {$eq: "Caballero"}
    },
    {
        _id: 0,
        nombre: 1,
        tipo: 1
    }
)*/

// $ne 
// hace alución a "no es igual a"

/*db.products.find(
    {
        tipo: {$ne: "Caballero"} //mostrará todo lo que no es 
        //"caballero"
    },
    {
        _id: 0,
        nombre: 1,
        marca: 1,
        tipo: 1
    }
).count()*/

//$gt = greater than
//mayor que 

/*db.products.find(
    {cantidad: {$gt: 100}}, //espacio para el filtrado

    {
        _id: 0,
        nombre: 1,
        marca: 1,
        cantidad: 1,
        sucursal: 1
    }
)*/

//$gte = greater than or equal
//mayor o igual que

/*db.products.find(
    {
        precio: {$gte: 50}
    },
    {
        _id: 0,
        nombre: 1,
        marca: 1,
        precio: 1
    }
)*/

//$lt = less than
// menor que

/*db.products.find(
    {cantidad: {$lt: 100}},
    {
        _id: 0,
        nombre: 1,
        precio: 1,
        marca: 1,
        cantidad: 1
    }
)*/

//lte = less than or equal
//menor o igual 

/*db.products.find(
    {precio: {$lte: 50}},
    {
        _id: 0,
        nombre: 1,
        cantidad: 1,
        precio: 1
    }
)*/

//in 
//muestra la coencidencia por lo menos de un valor en un array

/*db.clients.find(
    {preferencias: {$in: ["Dama", "Niño"]}},
    {
        _id: 0,
        nombre: 1,
        apellidos: 1,
        telefono: 1,
        preferencias: 1
    }
).count()*/

//nin = not in
//muestra todo menos lo que le indicas en una condición

/*db.products.find(
    {tipo: {$nin: ["Caballero", "Niño"]}}, // no incluye a "caballero" 
    // ni a "Niño"

    {
        _id: 0,
        nombre: 1,
        marca: 1,
        tipo: 1,
        cantidad: 1
    }
)*/

//$and = y 
//valida que dos o más expresiones sean verdaderas, pero si 
//alguna de ellas es falsa pues devuelve falso

/*db.products.find(
    {$and: [{
        cantidad: {$gte: 100},
        precio: {$lte: 100}
    }]
    },

    {
        _id: 0,
        nombre: 1,
        precio: 1,
        cantidad: 1
    }
)*/

//$or = 0
//Evalua 2 o más expresiones lógicas, devuelve true si al menos
//una de ellas cumpla

/*db.products.find(
    {$or: [{
        cantidad: {$gte: 200},
        precio: {$lt: 100}
    }]
    },

    {
        _id: 0,
        nombre: 1,
        precio: 1,
        cantidad: 1
    }
)*/